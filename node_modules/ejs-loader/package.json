{
  "name": "ejs-loader",
  "version": "0.3.0",
  "description": "EJS (Underscore/LoDash Templates) loader for webpack",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/okonet/ejs-loader.git"
  },
  "keywords": [
    "ejs",
    "underscore",
    "lodash",
    "_",
    "webpack",
    "loader",
    "template"
  ],
  "author": {
    "name": "Andrey Okonetchnikov",
    "email": "andrey@okonet.ru"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/okonet/ejs-loader/issues"
  },
  "homepage": "https://github.com/okonet/ejs-loader",
  "dependencies": {
    "lodash": "^3.6.0",
    "loader-utils": "^0.2.7"
  },
  "readme": "# ejs-loader for webpack\n\nEJS (Underscore/LoDash Templates) loader for [webpack](http://webpack.github.io/). Uses [lodash template](http://lodash.com/docs#template) function to compile templates.\n\nIf you are looking for the loader which uses [EJS templating engine](https://github.com/tj/ejs), there is [ejs-compiled-loader](https://github.com/bazilio91/ejs-compiled-loader)\n\n## Installation\n\n`npm install ejs-loader`\n\n## Usage\n\n[Documentation: Using loaders](http://webpack.github.io/docs/using-loaders.html)\n\n``` javascript\nvar template = require(\"ejs!./file.ejs\");\n// => returns the template function compiled with undesrcore (lodash) templating engine.\n\n// And then use it somewhere in your code\ntemplate(data) // Pass object with data\n```\n\nYou also should provide a global `_` variable with the lodash/underscore runtime. You can do it with the following webpack plugin: https://github.com/webpack/docs/wiki/list-of-plugins#provideplugin\n\n```\nplugins: [\n    new webpack.ProvidePlugin({\n        _: \"underscore\"\n    })\n]\n```\n\n### Options\n[Underscore](http://underscorejs.org/#template)/[Lodash](https://lodash.com/docs#template) options can be passed in using the querystring or adding an ```esjLoader``` options block to your configuration.\n\nConfig example using a querystring:\n``` js\nmodule.exports = {\n  module: {\n    loaders: [\n      { test: /\\.ejs$/, loader: 'ejs-loader?variable=data' },\n    ]\n  }\n};\n```\nis equivalent to\n``` js\nvar template = _.template('<%= template %>', { variable : 'data' });\n```\n\n``` js\nmodule.exports = {\n    module: {\n        loaders: [\n            {\n                test: /\\.ejs$/, \n                loader: 'ejs-loader', \n                query: { \n                    variable: 'data', \n                    interpolate : '\\\\{\\\\{(.+?)\\\\}\\\\}', \n                    evaluate : '\\\\[\\\\[(.+?)\\\\]\\\\]' \n                }\n            },\n        ]\n    }\n};\n```\nis equivalent to\n``` js\nvar template = _.template('<%= template %>', { variable: 'data', interpolate : '\\\\{\\\\{(.+?)\\\\}\\\\}', evaluate : '\\\\[\\\\[(.+?)\\\\]\\\\]' });\n```\n\nConfig example using the ```ejsLoader``` config block:\n``` js\nmodule.exports = {\n  module: {\n    loaders: [\n      { test: /\\.ejs$/, loader: 'ejs-loader',\n    ]\n  },\n  ejsLoader : {\n    variable    : 'data',\n    interpolate : /\\{\\{(.+?)\\}\\}/g,\n    evaluate    : /\\[\\[(.+?)\\]\\]/g\n  }\n};\n```\n\n## Release History\n* 0.3.0 - Allow passing template options via `ejsLoader` or via loader's `query`\n* 0.2.1 - Add ability to pass compiller options\n* 0.1.0 - Initial release\n\n## License\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
  "readmeFilename": "README.md",
  "_id": "ejs-loader@0.3.0",
  "dist": {
    "shasum": "4c80f75406722334c86594410b3934ddba33b042"
  },
  "_from": "ejs-loader@",
  "_resolved": "https://registry.npmjs.org/ejs-loader/-/ejs-loader-0.3.0.tgz"
}

{
  "name": "bootstrap-toggle",
  "description": "Bootstrap Toggle is a highly flexible Bootstrap plugin that converts checkboxes into toggles",
  "version": "2.2.2",
  "main": "js/bootstrap-toggle.js",
  "keywords": [
    "bootstrap",
    "toggle",
    "bootstrap-toggle",
    "switch",
    "bootstrap-switch"
  ],
  "homepage": "http://www.bootstraptoggle.com",
  "repository": {
    "type": "git",
    "url": "https://github.com/minhur/bootstrap-toggle.git"
  },
  "license": "MIT",
  "author": {
    "name": "Min Hur",
    "email": "min.hur@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/minhur/bootstrap-toggle/issues"
  },
  "devDependencies": {
    "grunt-contrib-clean": "^0.6.0",
    "grunt-contrib-cssmin": "^0.10.0",
    "grunt-contrib-uglify": "^0.6.0"
  },
  "readme": "# Bootstrap Toggle\nBootstrap Toggle is a highly flexible Bootstrap plugin that converts checkboxes into toggles.\n\nVisit http://www.bootstraptoggle.com for demos.\n\n## Getting Started\n\n### Installation\nYou can [download](https://github.com/minhur/bootstrap-toggle/archive/master.zip) the latest version of Bootstrap Toggle or use CDN to load the library.\n\n`Warning` If you are using Bootstrap v2.3.2, use `bootstrap2-toggle.min.js` and `bootstrap2-toggle.min.css` instead.\n\n```html\n<link href=\"https://gitcdn.github.io/bootstrap-toggle/2.2.0/css/bootstrap-toggle.min.css\" rel=\"stylesheet\">\n<script src=\"https://gitcdn.github.io/bootstrap-toggle/2.2.0/js/bootstrap-toggle.min.js\"></script>\n```\n\n### Bower Install\n```bash\nbower install bootstrap-toggle\n```\n\n## Usage\n\n### Basic example\nSimply add `data-toggle=\"toggle\"` to convert checkboxes into toggles.\n\n```html\n<input type=\"checkbox\" checked data-toggle=\"toggle\">\n```\n\n### Stacked checkboxes\nRefer to Bootstrap Form Controls documentation to create stacked checkboxes. Simply add `data-toggle=\"toggle\"` to convert checkboxes into toggles.\n\n```html\n<div class=\"checkbox\">\n  <label>\n    <input type=\"checkbox\" data-toggle=\"toggle\">\n    Option one is enabled\n  </label>\n</div>\n<div class=\"checkbox disabled\">\n  <label>\n    <input type=\"checkbox\" disabled data-toggle=\"toggle\">\n    Option two is disabled\n  </label>\n</div>\n```\n\n### Inline Checkboxes\nRefer to Bootstrap Form Controls documentation to create inline checkboxes. Simply add `data-toggle=\"toggle\"` to a convert checkboxes into toggles.\n\n```html\n<label class=\"checkbox-inline\">\n  <input type=\"checkbox\" checked data-toggle=\"toggle\"> First\n</label>\n<label class=\"checkbox-inline\">\n  <input type=\"checkbox\" data-toggle=\"toggle\"> Second\n</label>\n<label class=\"checkbox-inline\">\n  <input type=\"checkbox\" data-toggle=\"toggle\"> Third\n</label>\n```\n\n## API\n\n### Initialize by JavaScript\nInitialize toggles with id `toggle-one` with a single line of JavaScript.\n\n```html\n<input id=\"toggle-one\" checked type=\"checkbox\">\n<script>\n  $(function() {\n    $('#toggle-one').bootstrapToggle();\n  })\n</script>\n```\n\n### Options\nOptions can be passed via data attributes or JavaScript. For data attributes, append the option name to `data-`, as in `data-on=\"Enabled\"`.\n\n```html\n<input type=\"checkbox\" data-toggle=\"toggle\" data-on=\"Enabled\" data-off=\"Disabled\">\n<input type=\"checkbox\" id=\"toggle-two\">\n<script>\n  $(function() {\n    $('#toggle-two').bootstrapToggle({\n      on: 'Enabled',\n      off: 'Disabled'\n    });\n  })\n</script>\n```\n\nName|Type|Default|Description|\n---|---|---|---\non|string/html|\"On\"|Text of the on toggle\noff|string/html|\"Off\"|Text of the off toggle\nsize|string|\"normal\"|Size of the toggle. Possible values are `large`, `normal`, `small`, `mini`.\nonstyle|string|\"primary\"|Style of the on toggle. Possible values are `default`, `primary`, `success`, `info`, `warning`, `danger`\noffstyle|string|\"default\"|Style of the off toggle. Possible values are `default`, `primary`, `success`, `info`, `warning`, `danger`\nstyle|string| |Appends the value to the class attribute of the toggle. This can be used to apply custom styles. Refer to Custom Styles for reference.\nwidth|integer|*null*|Sets the width of the toggle. if set to *null*, width will be calculated.\nheight|integer|*null*|Sets the height of the toggle. if set to *null*, height will be calculated.\n\n### Methods\nMethods can be used to control toggles directly.\n\n```html\n<input id=\"toggle-demo\" type=\"checkbox\" data-toggle=\"toggle\">\n```\n\nMethod|Example|Description\n---|---|---\ninitialize|$('#toggle-demo').bootstrapToggle()|Initializes the toggle plugin with options\ndestroy|$('#toggle-demo').bootstrapToggle('destroy')|Destroys the toggle\non|$('#toggle-demo').bootstrapToggle('on')|Sets the toggle to 'On' state\noff|$('#toggle-demo').bootstrapToggle('off')|Sets the toggle to 'Off' state\ntoggle|$('#toggle-demo').bootstrapToggle('toggle')|Toggles the state of the toggle\nenable|$('#toggle-demo').bootstrapToggle('enable')|Enables the toggle\ndisable|$('#toggle-demo').bootstrapToggle('disable')|Disables the toggle\n\n## Events\n\n### Event Propagation\nNote All events are propagated to and from input element to the toggle.\n\nYou should listen to events from the `<input type=\"checkbox\">` directly rather than look for custom events.\n\n```html\n<input id=\"toggle-event\" type=\"checkbox\" data-toggle=\"toggle\">\n<div id=\"console-event\"></div>\n<script>\n  $(function() {\n    $('#toggle-event').change(function() {\n      $('#console-event').html('Toggle: ' + $(this).prop('checked'))\n    })\n  })\n</script>\n```\n\n### API vs Input\nThis also means that using the API or Input to trigger events will work both ways.\n\n```html\n<input id=\"toggle-trigger\" type=\"checkbox\" data-toggle=\"toggle\">\n<button class=\"btn btn-success\" onclick=\"toggleOn()\">On by API</button>\n<button class=\"btn btn-danger\" onclick=\"toggleOff()\">Off by API</button>\n<button class=\"btn btn-success\" onclick=\"toggleOnByInput()\">On by Input</button>\n<button class=\"btn btn-danger\" onclick=\"toggleOffByInput()\">Off by Input</button>\n<script>\n  function toggleOn() {\n    $('#toggle-trigger').bootstrapToggle('on')\n  }\n  function toggleOff() {\n    $('#toggle-trigger').bootstrapToggle('off')  \n  }\n  function toggleOnByInput() {\n    $('#toggle-trigger').prop('checked', true).change()\n  }\n  function toggleOffByInput() {\n    $('#toggle-trigger').prop('checked', false).change()\n  }\n</script>\n```\n\n### Integration\n\n#### [KnockoutJS](http://knockoutjs.com)\n\nA binding for knockout is available here: [aAXEe/knockout-bootstrap-toggle](https://github.com/aAXEe/knockout-bootstrap-toggle)\n\n## Demos\n\nVisit http://www.bootstraptoggle.com for demos.\n",
  "readmeFilename": "README.md",
  "_id": "bootstrap-toggle@2.2.2",
  "dist": {
    "shasum": "802b1743db93780e9b6d8c6952394e777dd41e5a"
  },
  "_from": "bootstrap-toggle@",
  "_resolved": "https://registry.npmjs.org/bootstrap-toggle/-/bootstrap-toggle-2.2.2.tgz"
}
